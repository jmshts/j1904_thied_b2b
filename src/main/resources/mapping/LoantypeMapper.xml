<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mapper.LoantypeMapper" >
  <resultMap id="BaseResultMap" type="com.sy.pojo.Loantype" >
    <id column="loanTypeId" property="loantypeid" jdbcType="INTEGER" />
    <result column="loadTypeName" property="loadtypename" jdbcType="VARCHAR" />
    <result column="rate" property="rate" jdbcType="DECIMAL" />
    <result column="loanTime" property="loantime" jdbcType="INTEGER" />
    <result column="minInvestment" property="mininvestment" jdbcType="DECIMAL" />
    <result column="maxInvestment" property="maxinvestment" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    loanTypeId, loadTypeName, rate, loanTime, minInvestment, maxInvestment, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sy.pojo.LoantypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loantype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loantype
    where loanTypeId = #{loantypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loantype
    where loanTypeId = #{loantypeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sy.pojo.LoantypeExample" >
    delete from loantype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sy.pojo.Loantype" >
    insert into loantype (loanTypeId, loadTypeName, rate, 
      loanTime, minInvestment, maxInvestment, 
      status)
    values (#{loantypeid,jdbcType=INTEGER}, #{loadtypename,jdbcType=VARCHAR}, #{rate,jdbcType=DECIMAL}, 
      #{loantime,jdbcType=INTEGER}, #{mininvestment,jdbcType=DECIMAL}, #{maxinvestment,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sy.pojo.Loantype" >
    insert into loantype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loantypeid != null" >
        loanTypeId,
      </if>
      <if test="loadtypename != null" >
        loadTypeName,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="loantime != null" >
        loanTime,
      </if>
      <if test="mininvestment != null" >
        minInvestment,
      </if>
      <if test="maxinvestment != null" >
        maxInvestment,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loantypeid != null" >
        #{loantypeid,jdbcType=INTEGER},
      </if>
      <if test="loadtypename != null" >
        #{loadtypename,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="loantime != null" >
        #{loantime,jdbcType=INTEGER},
      </if>
      <if test="mininvestment != null" >
        #{mininvestment,jdbcType=DECIMAL},
      </if>
      <if test="maxinvestment != null" >
        #{maxinvestment,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sy.pojo.LoantypeExample" resultType="java.lang.Integer" >
    select count(*) from loantype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update loantype
    <set >
      <if test="record.loantypeid != null" >
        loanTypeId = #{record.loantypeid,jdbcType=INTEGER},
      </if>
      <if test="record.loadtypename != null" >
        loadTypeName = #{record.loadtypename,jdbcType=VARCHAR},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=DECIMAL},
      </if>
      <if test="record.loantime != null" >
        loanTime = #{record.loantime,jdbcType=INTEGER},
      </if>
      <if test="record.mininvestment != null" >
        minInvestment = #{record.mininvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.maxinvestment != null" >
        maxInvestment = #{record.maxinvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update loantype
    set loanTypeId = #{record.loantypeid,jdbcType=INTEGER},
      loadTypeName = #{record.loadtypename,jdbcType=VARCHAR},
      rate = #{record.rate,jdbcType=DECIMAL},
      loanTime = #{record.loantime,jdbcType=INTEGER},
      minInvestment = #{record.mininvestment,jdbcType=DECIMAL},
      maxInvestment = #{record.maxinvestment,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sy.pojo.Loantype" >
    update loantype
    <set >
      <if test="loadtypename != null" >
        loadTypeName = #{loadtypename,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="loantime != null" >
        loanTime = #{loantime,jdbcType=INTEGER},
      </if>
      <if test="mininvestment != null" >
        minInvestment = #{mininvestment,jdbcType=DECIMAL},
      </if>
      <if test="maxinvestment != null" >
        maxInvestment = #{maxinvestment,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where loanTypeId = #{loantypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sy.pojo.Loantype" >
    update loantype
    set loadTypeName = #{loadtypename,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=DECIMAL},
      loanTime = #{loantime,jdbcType=INTEGER},
      minInvestment = #{mininvestment,jdbcType=DECIMAL},
      maxInvestment = #{maxinvestment,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER}
    where loanTypeId = #{loantypeid,jdbcType=INTEGER}
  </update>
</mapper>